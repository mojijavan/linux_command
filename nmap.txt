nmap popular,versatile,and robust port scanners
default Nmap TCP scan will scan the 1000 most popular ports

We’ll scan and monitoring the amount of traffic sent to the target host using iptables command
Configuring our iptables rules for the scan
>sudo iptables -I INPUT 1 -s 10.11.1.220 -j ACCEPT
>sudo iptables -I OUTPUT 1 -d 10.11.1.220 -j ACCEPT
>sudo iptables -Z
-I option to insert a new rule
-s to specify a source IP address
-d to specify a destination IP address,
-j to ACCEPT the traffic
-Z option to zero the packet and byte counters in all chains.

Scanning an IP for the 1000 most popular TCP ports
>nmap ip

Using iptables to monitor nmap traffic for a top 1000 port scan
>sudo iptables -vn -L
-v option to add some verbosity to our output
-n to enable numeric output
-L to list the rules present in all chains

Using iptables to monitor nmap traffic for a port scan on ALL TCP ports
#zero the packet and byte counters in all chains again
>sudo iptables -Z
#nmap scan using -p to specify ALL TCP ports
>nmap -p 1-65535 10.11.1.220
>sudo iptables -vn -L

Stealth / SYN Scanning
send syn request and if port is open syn-ack Come back and ack not sending and handshaking not completed
because three handshake not completed data not see in application layer and logs
>sudo nmap -sS ip
term “stealth” , in the past, primitive firewalls would fail to log incomplete TCP connections. but modern firewalls is detect this scans

TCP Connect Scanning
does not require elevated privileges
connect scan takes much longer to complete than a SYN scan
> nmap -sT ip

UDP Scanning
nmap use prodtocols like icmp or snmp for check port status
> sudo nmap -sU ip

Using nmap to perform a combined UDP and SYN scan
> sudo nmap -sS -sU ip

Network Sweeping
for scan large volumes of hosts begin with broad scans, and use more specific scans against hosts of interest
> nmap -sn 10.11.1.1-254

we can use Nmap’s “greppable” output parameter, -oG, to save these results into a format that is easier to manage:
Using nmap to perform a network sweep and then using grep to find live hosts
> nmap -v -sn 10.11.1.1-254 -oG ping-sweep.txt
> grep Up ping-sweep.txt | cut -d " " -f 2

Using nmap to scan for web servers using port 80
> nmap -p 80 10.11.1.1-254 -oG web-sweep.txt
> grep open web-sweep.txt | cut -d " " -f 2

Using nmap to perform a top twenty port scan, saving the output in greppable format
> nmap -sT -A --top-ports=20 10.11.1.1-254 -oG top-port-sweep.txt
-A enable os detection 

OS Fingerprinting
simple nmap OS fingerprint scan
sudo nmap -O 10.11.1.220

Banner Grabbing/Service Enumeration
identify services running on specific ports by inspecting service banners (-sV)
> nmap -sV -sT -A 10.11.1.220

Nmap Scripting Engine (NSE)
launch user-created scripts in order to automate
various scanning tasks. These scripts perform a broad range of functions including DNS
enumeration, brute force attacks, and even vulnerability identification. NSE scripts are located in
the /usr/share/nmap/scripts directory

Using nmap’s scripting engine (NSE) for OS fingerprinting
> nmap 10.11.1.220 --script=smb-os-discovery

Using nmap to perform a DNS zone transfer
> nmap --script=dns-zone-transfer -p 53 ns2.megacorpone.com

Using the --script-help option to view more information about a script
> nmap --script-help dns-zone-transfer

Finding various nmap SMB NSE scripts
> ls -1 /usr/share/nmap/scripts/smb*

Using the nmap scripting engine to perform OS discovery
> nmap -v -p 139, 445 --script=smb-os-discovery 10.11.1.227

Determining whether a host is vulnerable to the MS08_067 vulnerability
> nmap -v -p 139,445 --script=smb-vuln-ms08-067 --script-args=unsafe=1 10.11.1.5

NFS Enumeration
Both Portmapper214 and RPCbind215 run on TCP port 111. RPCbind maps RPC services to the ports
on which they listen. RPC processes notify rpcbind when they start, registering the ports they are
listening on and the RPC program numbers they expect to serve.

Using nmap to identify hosts that have portmapper/rpcbind running
> nmap -v -p 111 10.11.1.1-254

Querying rpcbind in order to get registered services
> nmap -sV -p 111 --script=rpcinfo 10.11.1.1-254

Locating various NSE scripts for NFS
> ls -1 /usr/share/nmap/scripts/nfs*

Running all NSE scripts for NFS
> nmap -p 111 --script nfs* 10.11.1.72

NFS attack example
pwkv2 book page 199

pwkv2 page 200
run all three of nfs scripts on single host
> nmap -p 111 --script nfs* 10.11.1.72

replace the UUID in the /etc/passwd
> sudo sed -i -e 's/1001/1014/g' /etc/passwd

Scanning for SNMP
> sudo nmap -sU --open -p 161 10.11.1.1-254 -oG open-snmp.txt
-open option is used to limit the output to only display open ports










